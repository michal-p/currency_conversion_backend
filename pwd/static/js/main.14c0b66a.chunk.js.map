{"version":3,"sources":["services/data.js","components/CurrencySelect.js","components/Converter.js","components/Statistics.js","components/Footer.js","components/Notification.js","App.js","index.js"],"names":["getCurrencies","axios","get","then","response","data","getLatest","convert","newTransfer","post","getStatistics","Converter","currencies","handler","selected","value","onChange","Object","keys","map","key","currenciesList","conversion","handleSubmit","handleAmount","handleFromChange","handleToChange","onSubmit","className","amountFrom","type","step","CurrencySelect","currencyFrom","amountTo","readOnly","currencyTo","Statistics","stats","style","color","fontStyle","fontSize","popular","amountConvertedInUSD","amountRequests","Footer","Notification","message","App","useState","setCurrenciesList","statistics","setStatistics","setConversion","notificationMessage","setNotificationMessage","setType","showHideNotification","setTimeout","dataServices","catch","error","useEffect","event","fromCurrency","toCurrency","fromAmount","JSON","stringify","preventDefault","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14c0b66a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api'\n\nconst getCurrencies = () => {\n\tconst request = axios.get(`${baseUrl}/currencies`)\n\treturn request.then(response => response.data)\n}\n\nconst getLatest = () => {\n\tconst request = axios.get(`${baseUrl}/latest`)\n\treturn request.then(response => response.data)\n}\n\nconst convert = (newTransfer) => {\n\tconst request = axios.post(`${baseUrl}/convert`, newTransfer)\n\treturn request.then(response => response.data)\n}\n\nconst getStatistics = () => {\n\tconst request = axios.get(`${baseUrl}/statistics`)\n\treturn request.then(response => response.data)\n}\n\nexport default { getCurrencies, getLatest, convert, getStatistics }","import React from 'react'\n\nconst Converter = ({ currencies, handler, selected }) => {\n\n\n  return (\n\t\t<select value={selected} onChange={handler}>\n\t\t\t{\n\t\t\t\tObject.keys(currencies).map(key => {\n\t\t\t\t\treturn <option key={key} value={key}>{key} ({currencies[key]})</option>\n\t\t\t\t})\n\t\t\t}\n\t\t</select>\n\n\t)\n}\n\nexport default Converter","import React from 'react'\nimport CurrencySelect from './CurrencySelect'\n\nconst Converter = ({ currenciesList, conversion, handleSubmit, handleAmount, handleFromChange, handleToChange }) => {\n  \n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"line\">\n          <label className=\"col75\">\n            <input value={conversion.amountFrom} type=\"number\" step=\"0.01\" onChange={handleAmount}/>\n          </label>\n          <label className=\"col25\">\n            <CurrencySelect selected={conversion.currencyFrom} handler={handleFromChange} currencies={currenciesList} />\n          </label>\n        </div>\n        <div className=\"line\">\n          <label className=\"col75\">\n            <input className=\"read\" value={conversion.amountTo} type=\"number\" readOnly/>\n          </label>\n          <label className=\"col25\">\n            <CurrencySelect selected={conversion.currencyTo} handler={handleToChange} currencies={currenciesList} />\n          </label>\n        </div>\n        <div className=\"line\">\n          <label className=\"col25\">\n            <input type=\"submit\" value=\"Transfer\"/>\n          </label>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Converter","import React from 'react'\n\nconst Statistics = ({ stats }) => {\n  const statisticStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={statisticStyle}>\n      <br />\n      <p>Most popular destination currency <em>{stats.popular}</em></p>\n      <p>Total amount have been converted <em>{stats.amountConvertedInUSD}</em>USD</p>\n      <p>Total amount of requests <em>{stats.amountRequests}</em></p>\n    </div>\n  )\n}\n\nexport default Statistics","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Converter app footer component</em>\n    </div>\n  )\n}\n\nexport default Footer","import React from 'react'\n\nconst Notification = ({message, type}) => {\n\tif(message === null) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className={type}>\n\t\t\t{message}\n\t\t</div>\n\t)\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport dataServices from './services/data'\nimport Converter from './components/Converter'\nimport Statistics from './components/Statistics'\nimport Footer from './components/Footer'\nimport Notification from './components/Notification'\n\nfunction App() {\n  const [ currenciesList, setCurrenciesList ] = useState({})\n  const [ statistics, setStatistics ] = useState({})\n  const [ conversion, setConversion ] = useState({\n    currencyFrom: 'HUF',\n    amountFrom: 0,\n    currencyTo: 'EUR',\n    amountTo: 0\n  })\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [ type, setType ] = useState('note')\n\n  const showHideNotification = (message, type) => {\n    setNotificationMessage(message)\n    setType(type)\n    setTimeout(() => setNotificationMessage(null), 5000)\n  }\n\n  const getStatistics = () => {\n    dataServices\n      .getStatistics()\n      .then(response => setStatistics(response))\n      .catch(error => showHideNotification(`effect getStatistics service error: ${error}`, 'error'))\n  }\n\n  useEffect(() => {\n    dataServices\n      .getCurrencies()\n      .then(response => setCurrenciesList(response))\n      .catch(error => showHideNotification(`effect getCurrencies service error: ${error}`, 'error'))\n  }, [])\n\n  useEffect(() => getStatistics(), [])\n\n  const handleFromChange = (event) => {\n    setConversion({...conversion, currencyFrom: event.target.value})\n  }\n  const handleToChange = (event) => {\n    setConversion({...conversion, currencyTo: event.target.value})\n  }\n  const handleAmount = (event) => {\n    setConversion({...conversion, amountFrom: event.target.value, amountTo: ''})\n  }\n  const handleSubmit = (event) => {\n    let newTransfer = {\n      fromCurrency: conversion.currencyFrom,\n      toCurrency: conversion.currencyTo,\n      fromAmount: conversion.amountFrom\n    }\n    dataServices\n      .convert(newTransfer)\n      .then(response => {\n        setConversion({\n          currencyFrom: response.currencyFrom,\n          amountFrom: response.amountFrom,\n          currencyTo: response.currencyTo,\n          amountTo: response.amountTo\n        })\n        showHideNotification(`Saved to transfer to db: ${ JSON.stringify(conversion) }`, 'note')\n        getStatistics()\n      })\n      .catch(error => showHideNotification(`effect convert service error: ${error}`, 'error'))\n    event.preventDefault()\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Currency conversion HEADER\n      </header>\n      <main>\n        <section>\n          <h1>Converter</h1>\n          <Converter currenciesList={currenciesList} conversion={conversion} handleSubmit={handleSubmit} handleAmount={handleAmount} handleFromChange={handleFromChange} handleToChange={handleToChange} />\n        </section>\n        <section className=\"statistics\">\n          <h1>Statistics</h1>\n          <Statistics stats={statistics}/>\n        </section>\n      </main>\n      <Notification message={notificationMessage} type={type}/>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}